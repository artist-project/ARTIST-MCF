/*******************************************************************************
 * File generated from the petstore-app::org::agoncal::application::petstore::domain::Category uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 26. Juni 2014 10:57:28 MESZ
 *******************************************************************************/
package org.agoncal.application.petstore.domain;

import java.util.ArrayList;
import com.googlecode.objectify.Ref;
import com.googlecode.objectify.annotation.Id;
import com.googlecode.objectify.annotation.Entity;
import java.util.List;
import org.agoncal.application.petstore.domain.Product;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of Category.
 * 
 * @author 
 */
@Entity
public class Category {
	/**
	 * Description of the property id.
	 */
	@Id
	public Long id;
	/**
	  * Description of the property name.
	  */
	
	public String name;
	/**
	   * Description of the property description.
	   */
	
	public String description;
	/**
	    * Description of the property products.
	    */
	
	public List<Ref<Product>> products;
	// Start of user code (user defined attributes for Category)
	
	// End of user code
	
	/**
	 * The default constructor.
	 */
	public Category() {
	
	}
	
	// Start of user code (user defined methods for Category)
	
	// End of user code
	/**
	 * Returns id.
	 * @return id 
	 */
	public long getId() {
		return this.id;
	}
	
	/**
	 * Sets a value to attribute id. 
	 * @param newId 
	 */
	public void setId(long newId) {
	    this.id = newId;
	}

	/**
	 * Returns name.
	 * @return name 
	 */
	public String getName() {
		return this.name;
	}
	
	/**
	 * Sets a value to attribute name. 
	 * @param newName 
	 */
	public void setName(String newName) {
	    this.name = newName;
	}

	/**
	 * Returns description.
	 * @return description 
	 */
	public String getDescription() {
		return this.description;
	}
	
	/**
	 * Sets a value to attribute description. 
	 * @param newDescription 
	 */
	public void setDescription(String newDescription) {
	    this.description = newDescription;
	}

	/**
	 * Returns products.
	 * @return products 
	 */
	public List<Ref<Product>> getProducts() {
		return this.products;
	}
	
	/**
	 * Sets a value to attribute products. 
	 * @param newProducts 
	 */
	public void setProducts(List<Product> referencedEntities) {
		this.products = new ArrayList<Ref<Product>>();
		for (Product entity : referencedEntities) {
			this.products.add(Ref.create(entity));
		}
	}
	
	/**
	 * Adds a value to attribute products. 
	 * @param addProducts 
	 */
	public void addProducts(Product entity) {
	    if (products == null)
	       products = new ArrayList<Ref<Product>>();
	   products.add(Ref.create(entity));
	}




}
